package org.apiman.client.resources;

import org.apiman.client.ApiClient;
import org.apiman.client.resources.plugins.PluginsPolicyDefsClient;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

@Component
public class PluginsClient extends ApiClient {
	
	private static final String PLUGINS_PATH = "/plugins";
	
	@Autowired
	private PluginsPolicyDefsClient pluginsPolicyDefsClient;
	
	public PluginsPolicyDefsClient getPluginsPolicyDefsClient() {
		return pluginsPolicyDefsClient;
	}

	/* This endpoint returns a list of all plugins that have been added to the system.
	 * 
	 */
	public String listAllPlugins() {
		
		return apimanUrl;
	}
	
	/* Use this endpoint to add a plugin to apiman. A plugin consists of the maven coordinates of an artifact deployed 
	 * to a remote maven repository (e.g. maven central).
	 */
	public String addPlugin() {
		
		return apimanUrl;
	}
	
	/* Use this endpoint to retrieve a list of all plugins available to be installed. This list is generated by 
	 * querying all of the plugin registries configured in apiman and returning the list of plugins found in each (sorted by name). 
	 * Note that this endpoint includes all plugins, even those already installed.
	 */
	public String listAvailablePlugins() {
		
		return apimanUrl;
	}
	
	/* This endpoint can be used to access the full information about an apiman plugin. The plugin is retrieved using the ID 
	 * it was given when it was added. The ID information can be retrieved by listing all plugins or remembered when a plugin is first added.
	 */
	public String getPluginById() {
		
		return apimanUrl;
	}
	
	/* Call this endpoint to delete a plugin.
	 * 
	 */
	public String deletePluginById() {
		
		return apimanUrl;
	}
}
